// Code generated by go-swagger; DO NOT EDIT.

package title_parameter

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetTitleReader is a Reader for the GetTitle structure.
type GetTitleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTitleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTitleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetTitleUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetTitleOK creates a GetTitleOK with default headers values
func NewGetTitleOK() *GetTitleOK {
	return &GetTitleOK{}
}

/* GetTitleOK describes a response with status code 200, with default header values.

Successful operation
*/
type GetTitleOK struct {
}

func (o *GetTitleOK) Error() string {
	return fmt.Sprintf("[GET /?t][%d] getTitleOK ", 200)
}

func (o *GetTitleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTitleUnauthorized creates a GetTitleUnauthorized with default headers values
func NewGetTitleUnauthorized() *GetTitleUnauthorized {
	return &GetTitleUnauthorized{}
}

/* GetTitleUnauthorized describes a response with status code 401, with default header values.

Not authenticated
*/
type GetTitleUnauthorized struct {
}

func (o *GetTitleUnauthorized) Error() string {
	return fmt.Sprintf("[GET /?t][%d] getTitleUnauthorized ", 401)
}

func (o *GetTitleUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
