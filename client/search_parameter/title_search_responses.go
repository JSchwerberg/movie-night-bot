// Code generated by go-swagger; DO NOT EDIT.

package search_parameter

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// TitleSearchReader is a Reader for the TitleSearch structure.
type TitleSearchReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TitleSearchReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewTitleSearchOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewTitleSearchUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewTitleSearchOK creates a TitleSearchOK with default headers values
func NewTitleSearchOK() *TitleSearchOK {
	return &TitleSearchOK{}
}

/* TitleSearchOK describes a response with status code 200, with default header values.

Successful operation
*/
type TitleSearchOK struct {
}

func (o *TitleSearchOK) Error() string {
	return fmt.Sprintf("[GET /?s][%d] titleSearchOK ", 200)
}

func (o *TitleSearchOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewTitleSearchUnauthorized creates a TitleSearchUnauthorized with default headers values
func NewTitleSearchUnauthorized() *TitleSearchUnauthorized {
	return &TitleSearchUnauthorized{}
}

/* TitleSearchUnauthorized describes a response with status code 401, with default header values.

Not authenticated
*/
type TitleSearchUnauthorized struct {
}

func (o *TitleSearchUnauthorized) Error() string {
	return fmt.Sprintf("[GET /?s][%d] titleSearchUnauthorized ", 401)
}

func (o *TitleSearchUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
